version: "3.8"
services:

  portainer:
    container_name: Portainer
    hostname: portainer
    image: portainer/portainer-ee:latest
    restart: always
    ports:
      - 9443:9443
    networks:
      - avb
    volumes:
      - portainervol:/data
      - /var/run/docker.sock:/var/run/docker.sock

  homepage:
    container_name: Homepage
    hostname: homepage
    image: ghcr.io/gethomepage/homepage:latest
    restart: always
    ports:
      - 3000:3000
    networks:
      - avb
    volumes:
      - homepagevol:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $HOME/Docker/Images/Backgrounds:/app/public/images
      - $HOME/Docker/Images/Icons:/app/public/icons

  pihole:
    container_name: PiHole
    hostname: pihole
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  plex:
    container_name: Plex
    hostname: plex
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  jackett:
    container_name: Jackett
    hostname: jackett
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  sonarr:
    container_name: Sonarr
    hostname: sonarr
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  radarr:
    container_name: Radarr
    hostname: radarr
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  qbittorrent:
    container_name: qBittorrent
    hostname: qbittorrent
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  bazarr:
    container_name: Bazarr
    hostname: bazarr
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  overseerr:
    container_name: Overseerr
    hostname: overseerr
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  doplarr:
    container_name: Doplarr
    hostname: doplarr
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  mariadb:
    container_name: MariaDB
    hostname: mariadb
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  influxdb:
    container_name: InfluxDB
    hostname: influxdb
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  nextcloud:
    container_name: Nextcloud
    hostname: nextcloud
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  phpmyadmin:
    container_name: phpMyAdmin
    hostname: phpmyadmin
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  teamspeak:
    container_name: Teamspeak
    hostname: teamspeak
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  netbootxyz:
    container_name: NetbootXYZ
    hostname: netbootxyz
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

  grafana:
    container_name: Grafana
    hostname: grafana
    image: imagename:tag
    restart: always
    ports:
      - 80:80
    networks:
      - specifiednetwork
    volumes:
      - volumename:/containerpath
    environment:
      - name=value
    depends_on:
      - servicename

volumes:
portainervol:
homepagevol:
piholevol:
dnsmasqvol:
plexvol:
jackettvol:
sonarrvol:
radarrvol:
qbittorrentvol:
bazarrvol:
overseerrvol:
doplarrvol:
mariadbvol:
influxdbvol:
nextcloudvol:
phpmyadminvol:
teamspeakvol:
netbootvol:
grafanavol:

networks:
  avb: #Bridge Network
    driver: bridge
  avn: #Isolation Network
    driver: none